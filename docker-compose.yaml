services:
  app:
    image: ${IMAGE_NAME}:${GITHUB_SHA}
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ENV=${ENV}
      - PORT=${PORT}
      - DB=${DB}
      - LIMITER_ENABLED=${LIMITER_ENABLED}
      - LIMITER_RPS=${LIMITER_RPS}
      - LIMITER_BURST=${LIMITER_BURST}
      - MAILER_HOST=${MAILER_HOST}
      - MAILER_PORT=${MAILER_PORT}
      - MAILER_USERNAME=${MAILER_USERNAME}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
      - MAILER_SENDER=${MAILER_SENDER}
      - TRUSTED_ORIGINS=${TRUSTED_ORIGINS}
    env_file:
      - .env

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: