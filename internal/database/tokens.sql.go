// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: tokens.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const deleteTokenForUser = `-- name: DeleteTokenForUser :exec
DELETE FROM tokens
WHERE scope = $1 AND user_id = $2
`

type DeleteTokenForUserParams struct {
	Scope  string
	UserID uuid.UUID
}

func (q *Queries) DeleteTokenForUser(ctx context.Context, arg DeleteTokenForUserParams) error {
	_, err := q.db.ExecContext(ctx, deleteTokenForUser, arg.Scope, arg.UserID)
	return err
}

const insertToken = `-- name: InsertToken :exec
INSERT INTO tokens (hash, user_id, expiry, scope)
VALUES ($1, $2, $3, $4)
`

type InsertTokenParams struct {
	Hash   []byte
	UserID uuid.UUID
	Expiry time.Time
	Scope  string
}

func (q *Queries) InsertToken(ctx context.Context, arg InsertTokenParams) error {
	_, err := q.db.ExecContext(ctx, insertToken,
		arg.Hash,
		arg.UserID,
		arg.Expiry,
		arg.Scope,
	)
	return err
}
